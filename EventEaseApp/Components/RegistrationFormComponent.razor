 @inject ParticipantService ParticipantService
<section class="registration-form">
    <EditForm Model="NewParticipant" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="firstName">First Name:</label>
            <InputText id="firstName" class="form-control" @bind-Value="NewParticipant.FirstName" />
        </div>
        <div class="form-group">
            <label for="lastName">Last Name:</label>
            <InputText id="lastName" class="form-control" @bind-Value="NewParticipant.LastName" />
        </div>
        <div class="form-group">
            <label for="email">Email:</label>
            <InputText id="email" class="form-control" @bind-Value="NewParticipant.Email" />
        </div>
        <div class="form-group">
            <label for="phoneNumber">Phone Number:</label>
            <InputText id="phoneNumber" class="form-control" @bind-Value="NewParticipant.PhoneNumber" />
        </div>
        <div class="d-flex justify-content-start">
            <button type="submit" class="btn btn-success btn-reg">Register</button>
            <button type="button" class="btn btn-secondary btn-reg" @onclick="ResetForm">Reset</button>
        </div>
    </EditForm>
</section>

@code {

    private Participant NewParticipant { get; set; } = new Participant();
    public bool isEditing { get; private set; }

    private void HandleValidSubmit()
    {
            NewParticipant.Id = ParticipantService.GetNewParticipantId();
            NewParticipant.IsRegistered = true;
            NewParticipant.RegistrationDate = DateTime.Now;
            ParticipantService.AddParticipant(NewParticipant);
            NewParticipant = new Participant(); // Reset the form
    }

    private void ResetForm()
    {
        NewParticipant = new Participant();
        isEditing = false;
    }
}
